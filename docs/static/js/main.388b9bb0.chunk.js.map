{"version":3,"sources":["styles.module.css","Components/Display.tsx","Redux/types.ts","Redux/actions/index.ts","Components/Controls.tsx","App.tsx","Redux/calc.ts","Redux/reducers/outcome.ts","Redux/reducers/logs.ts","Redux/reducers/index.ts","index.tsx"],"names":["module","exports","Display","input","useSelector","state","outcome","className","styles","screen","logs","id","display","types","ADD_NUMBER","CLEAR","ADD_OPERATION","EXECUTE","CALCULATE","ADD_DECIMAL","AddNumber","num","type","payload","arr","content","Controls","dispatch","useDispatch","controller","map","i","operator","onClick","op","toString","acBtn","equal","Calculate","zero","number","App","calculator","divide","str","numbers","split","numb","result","length","x","parseFloat","multiply","calc","NumbersArrays","includes","negative","first","signedNumbers","Array","forEach","numberString","push","add","outcomeReducer","action","checkDecimal","plusSplit","minusSplit","divideSplit","inputReducer","lastIndex","toLocaleLowerCase","slice","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.388b9bb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__2VdwN\",\"calculator\":\"styles_calculator__ujsWH\",\"screen\":\"styles_screen__1xpqS\",\"controller\":\"styles_controller__1vUi8\",\"logs\":\"styles_logs__e9S_K\",\"display\":\"styles_display__3C2AS\",\"acBtn\":\"styles_acBtn__1QuLl\",\"operator\":\"styles_operator__wpBak\",\"equal\":\"styles_equal__3iyFb\",\"zero\":\"styles_zero__11Kyp\"};","import React from 'react';\r\nimport styles from '../styles.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../Redux/reducers';\r\n\r\nconst Display = () => {\r\n  const input = useSelector((state: RootState) => state.input);\r\n  const outcome = useSelector((state: RootState) => state.outcome);\r\n\r\n  return (\r\n    <div className={styles.screen}>\r\n      <div className={styles.logs}>{input}</div>\r\n      <div id='display' className={styles.display}>{outcome}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","const types = {\r\n  ADD_NUMBER: \"ADD_NUMBER\",\r\n  CLEAR: 'CLEAR',\r\n  ADD_OPERATION: 'ADD_OPERATION',\r\n  EXECUTE: 'EXECUTE',\r\n  CALCULATE: 'CALCULATE',\r\n  ADD_DECIMAL: 'ADD_DECIMAL'\r\n}\r\n\r\nexport default types;","import types from '../types';\r\n\r\nexport const AddNumber = (num: number | string) => ({\r\n  type: types.ADD_NUMBER,\r\n  payload: num\r\n});\r\n\r\nexport const AddOp = (op: string) => ({\r\n  type: types.ADD_OPERATION,\r\n  payload: op\r\n});\r\n\r\nexport const Clear = () => ({\r\n  type: types.CLEAR\r\n});\r\n\r\nexport const Calculate = (input: string) => ({\r\n  type: types.CALCULATE,\r\n  payload: input\r\n});\r\n\r\nexport const AddDecimal = () => ({\r\n  type: types.ADD_DECIMAL\r\n});\r\n\r\n","import React from 'react';\r\nimport styles from '../styles.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNumber, Clear, AddOp, Calculate, AddDecimal } from '../Redux/actions';\r\nimport { RootState } from '../Redux/reducers';\r\n\r\nconst arr = [\r\n  {\r\n    id: 'clear',\r\n    content: 'AC'\r\n  },\r\n  {\r\n    id: 'divide',\r\n    content: '/'\r\n  },\r\n  {\r\n    id: 'multiply',\r\n    content: 'x'\r\n  },\r\n  {\r\n    id: 'seven',\r\n    content: 7\r\n  },\r\n  {\r\n    id: 'eight',\r\n    content: 8\r\n  },\r\n  {\r\n    id: 'nine',\r\n    content: 9\r\n  },\r\n  {\r\n    id: 'subtract',\r\n    content: '-'\r\n  },\r\n  {\r\n    id: 'four',\r\n    content: 4\r\n  },\r\n  {\r\n    id: 'five',\r\n    content: 5\r\n  },\r\n  {\r\n    id: 'six',\r\n    content: 6\r\n  },\r\n  {\r\n    id: 'add',\r\n    content: '+'\r\n  },\r\n  {\r\n    id: 'one',\r\n    content: 1\r\n  },\r\n  {\r\n    id: 'two',\r\n    content: 2\r\n  },\r\n  {\r\n    id: 'three',\r\n    content: 3\r\n  },\r\n  {\r\n    id: 'equals',\r\n    content: '='\r\n  },\r\n  {\r\n    id: 'zero',\r\n    content: 0\r\n  },\r\n  {\r\n    id: 'decimal',\r\n    content: '.'\r\n  }\r\n];\r\n\r\nconst Controls = () => {\r\n  const input = useSelector((state: RootState) => state.input);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.controller}>\r\n      {\r\n        arr.map(i => {\r\n          if (i.content === '/' || i.content === 'x' || i.content === '-' || i.content === '+') {\r\n            return <div key={i.id} id={i.id} className={styles.operator} onClick={() => dispatch(AddOp(i.content.toString()))}>{i.content}</div>;\r\n          } else if (i.content === 'AC') {\r\n            return <div key={i.id} id={i.id} className={styles.acBtn} onClick={() => dispatch(Clear())}>{i.content}</div>;\r\n          } else if (i.content === '=') {\r\n            return <div key={i.id} id={i.id} className={styles.equal} onClick={() => dispatch(Calculate(input))}>{i.content}</div>;\r\n          } else if (i.content === 0) {\r\n            return <div key={i.id} id={i.id} className={styles.zero} onClick={() => dispatch(AddNumber(i.content))}>{i.content}</div>;\r\n          } else if (i.content === '.') {\r\n            return <div key={i.id} id={i.id} className={styles.number} onClick={() => dispatch(AddDecimal())}>{i.content}</div>;\r\n          }\r\n          return <div key={i.id} id={i.id} className={styles.number} onClick={() => dispatch(AddNumber(i.content))}>{i.content}</div>;\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\n\nimport Display from './Components/Display';\nimport Controls from './Components/Controls';\n\nimport styles from './styles.module.css';\n\n\nfunction App() {\n  return (\n    <div id={styles.App}>\n      <div className={styles.calculator}>\n        <Display />\n        <Controls />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const multiply = (str: string) => {\r\n  const numbers = str.split('x');\r\n  let result = numbers[0];\r\n  for (let i = 1; i < numbers.length; i++) {\r\n    const x = parseFloat(numbers[i]);\r\n    result = `${parseFloat(result) * x}`;\r\n  }\r\n  return `${result}`;\r\n}\r\n\r\nconst divide = (str: string) => {\r\n  const numbers = str.split('/').map(numb => multiply(numb));\r\n  let result = numbers[0];\r\n  for (let i = 1; i < numbers.length; i++) {\r\n    const x = parseFloat(numbers[i]);\r\n    result = `${parseFloat(result) / x}`;\r\n  }\r\n  return `${result}`;\r\n}\r\n\r\nconst add = (str: string) => {\r\n  const NumbersArrays = str\r\n    .split('+')\r\n    .map(numb => {\r\n      if (numb.includes('-')) {\r\n        const negative = numb.split('-');\r\n        const first = negative[0]\r\n        if (first[first.length - 1] === '/' || first[first.length - 1] === 'x') {\r\n          return [`${negative[0]}-${negative[1]}`];\r\n        }\r\n        // console.log([negative[0], `-${negative[1]}`]);\r\n        return [negative[0], `-${negative[1]}`];\r\n      }\r\n      return [numb];\r\n    });\r\n  const signedNumbers: Array<string> = new Array<string>();\r\n  NumbersArrays.forEach((arr) => {\r\n    arr.forEach((numberString) => {\r\n      signedNumbers.push(numberString);\r\n    })\r\n  });\r\n\r\n\r\n  const numbers = signedNumbers.map(numb => divide(numb));\r\n  let result = 0;\r\n  for (const i of numbers) {\r\n    const x = parseFloat(i);\r\n    result = result + x;\r\n  }\r\n  return `${result}`;\r\n}\r\n\r\nexport const calc = (str: string) => {\r\n  return add(str);\r\n}","import types from '../types';\r\nimport { calc } from '../calc';\r\n\r\ntype Action = {\r\n  type: string,\r\n  payload: string\r\n}\r\n\r\nconst outcomeReducer = (state = '0', action: Action) => {\r\n  switch (action.type) {\r\n    case types.CALCULATE:\r\n      if (action.payload === '') {\r\n        return '0';\r\n      }\r\n      return calc(action.payload);\r\n    case types.ADD_DECIMAL:\r\n      if (state === '')\r\n        return '0.'\r\n      if (state.includes('.'))\r\n        return `${state}`;\r\n      return `${state}.`;\r\n    case types.CLEAR:\r\n      return '0';\r\n    case types.ADD_NUMBER:\r\n      if (state === '/' || state === 'x' || state === '-' || state === '+') {\r\n        return `${parseFloat(action.payload)}`;\r\n      }\r\n      if (state.includes('.')) {\r\n        return `${state}${parseFloat(action.payload)}`;\r\n      }\r\n      return `${parseFloat(state) * 10 + parseFloat(action.payload)}`;\r\n    case types.ADD_OPERATION:\r\n      return action.payload;\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default outcomeReducer;","import types from '../types';\r\nimport { calc } from '../calc';\r\n\r\ntype Action = {\r\n  type: string,\r\n  payload?: string\r\n}\r\n\r\nconst checkDecimal = (str: string) => {\r\n  const plusSplit = str.split('+');\r\n  const minusSplit = plusSplit[plusSplit.length - 1].split('-');\r\n  const divideSplit = minusSplit[minusSplit.length - 1].split('/');\r\n  const multiplySplit = divideSplit[divideSplit.length - 1].split('x');\r\n  return multiplySplit.includes('.') ? true : false;\r\n}\r\n\r\nconst inputReducer = (state = '', action: Action) => {\r\n  switch (action.type) {\r\n    case types.CALCULATE:\r\n      if (action.payload === '') {\r\n        return '0';\r\n      }\r\n      return calc(`${action.payload}`);\r\n    case types.ADD_NUMBER:\r\n      return `${state}${action.payload}`;\r\n    case types.ADD_DECIMAL:\r\n      if (state === '')\r\n        return '0.'\r\n      if (checkDecimal(state))\r\n        return `${state}`;\r\n      return `${state}.`;\r\n    case types.ADD_OPERATION:\r\n      const lastIndex = state.length - 1;\r\n      if (lastIndex >= 0) {\r\n        if (state[lastIndex] === '+' || state[lastIndex] === '-') {\r\n          if (state[lastIndex - 1].toLocaleLowerCase() === 'x' || state[lastIndex - 1] === '/') {\r\n            if (action.payload === '+') {\r\n              return `${state.slice(0, lastIndex - 1)}${action.payload}`;\r\n            }\r\n            return `${state.slice(0, lastIndex)}${action.payload}`;\r\n          }\r\n          return `${state.slice(0, lastIndex)}${action.payload}`;\r\n        }\r\n        if (state[lastIndex].toLocaleLowerCase() === 'x' || state[lastIndex] === '/')\r\n          if (action.payload === '+') {\r\n            return `${state.slice(0, lastIndex)}${action.payload}`;\r\n          } else {\r\n            return `${state}${action.payload}`;\r\n          }\r\n      }\r\n      else\r\n        return `${state}`;\r\n      return `${state}${action.payload}`;\r\n    case types.CLEAR:\r\n      return '';\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default inputReducer;","import { combineReducers } from 'redux';\r\nimport outcomeReducer from './outcome';\r\nimport inputReducer from './logs';\r\n\r\nconst reducers = combineReducers({\r\n  outcome: outcomeReducer,\r\n  input: inputReducer\r\n});\r\n\r\nexport default reducers;\r\n\r\nexport type RootState = {\r\n  outcome: number,\r\n  input: string\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './reset.css';\nimport reducers from './Redux/reducers'\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}